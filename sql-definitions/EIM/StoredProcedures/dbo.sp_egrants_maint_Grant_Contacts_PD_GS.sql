SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON


CREATE   PROCEDURE [dbo].[sp_egrants_maint_Grant_Contacts_PD_GS] 
AS

DECLARE @PROC_NAME VARCHAR(50)
DECLARE @RUN_DATETIME DATETIME
SET @PROC_NAME = 'sp_egrants_maint_Grant_Contacts_PD_GS'
SET @RUN_DATETIME = GETDATE()

---------------------------------------------
--Benny: 1/15/2021: GRAB GRANTS CONTACTS FROM GPMATS.
---------------------------------------------

TRUNCATE TABLE GM_ACTION_QUEUE_VW 

INSERT INTO [dbo].GM_ACTION_QUEUE_VW (APPL_ID, APPL_TYPE_CODE, SERIAL_NUM, SUPPORT_YEAR, ACTION_FY, SUFFIX_CODE, RESP_SPEC_FULL_NAME_CODE, RESP_SPEC_EMAIL_ADDRESS, PD_EMAIL_ADDRESS, PD_FULL_NAME, ACTION_TYPE, ADMIN_PHS_ORG_CODE, RESP_SPEC_NPN_ID, PD_ROLE_USAGE_CODE, CAY_CODE)  
SELECT APPL_ID, APPL_TYPE_CODE, SERIAL_NUM, SUPPORT_YEAR, ACTION_FY, SUFFIX_CODE, RESP_SPEC_FULL_NAME_CODE, RESP_SPEC_EMAIL_ADDRESS, PD_EMAIL_ADDRESS, PD_FULL_NAME, ACTION_TYPE, ADMIN_PHS_ORG_CODE, RESP_SPEC_NPN_ID, PD_ROLE_USAGE_CODE, CAY_CODE
from openquery(CIIP_PROD,'SELECT APPL_ID, APPL_TYPE_CODE, SERIAL_NUM, SUPPORT_YEAR, ACTION_FY, SUFFIX_CODE, RESP_SPEC_FULL_NAME_CODE, RESP_SPEC_EMAIL_ADDRESS, PD_EMAIL_ADDRESS, PD_FULL_NAME, ACTION_TYPE, ADMIN_PHS_ORG_CODE, RESP_SPEC_NPN_ID, PD_ROLE_USAGE_CODE, CAY_CODE 
FROM GM_ACTION_QUEUE_VW g
WHERE (SUFFIX_CODE IS NULL OR SUFFIX_CODE LIKE ''%A%'') AND ACTION_TYPE NOT LIKE ''REVISION'' AND CANCEL_REASON_ID IS NULL AND appl_type_code IN (''1'', ''2'', ''5'', ''7'', ''9'')  AND DUMMY_ACTION_FLAG <> ''Y'' ')


Update Grant_Contacts_PD_GS
SET [SUFFIX_CODE] = GAQV.[SUFFIX_CODE], 
	[RESP_SPEC_FULL_NAME_CODE] = GAQV.[RESP_SPEC_FULL_NAME_CODE], 
	[RESP_SPEC_EMAIL_ADDRESS] = GAQV.[RESP_SPEC_EMAIL_ADDRESS],
	[PD_EMAIL_ADDRESS] = GAQV.[PD_EMAIL_ADDRESS],
	[PD_FULL_NAME] = GAQV.[PD_FULL_NAME],
	[ADMIN_PHS_ORG_CODE] = GAQV.[ADMIN_PHS_ORG_CODE],
	[RESP_SPEC_NPN_ID] = GAQV.[RESP_SPEC_NPN_ID],
	[PROG_CLASS_CODE] = CASE WHEN LEN(RTRIM(LTRIM(GAQV.[PD_ROLE_USAGE_CODE])))>=2 AND LEN(RTRIM(LTRIM(GAQV.[CAY_CODE])))>=2 THEN GAQV.PD_ROLE_USAGE_CODE+GAQV.CAY_CODE ELSE '' END 
	from Grant_Contacts_PD_GS GC inner join GM_ACTION_QUEUE_VW GAQV
	ON GC.APPL_ID = GAQV.APPL_ID and GC.ACTION_FY = GAQV.ACTION_FY and GC.SUPPORT_YEAR = gaqv.SUPPORT_YEAR


INSERT INTO [dbo].Grant_Contacts_PD_GS (APPL_ID, APPL_TYPE_CODE, SERIAL_NUM, SUPPORT_YEAR, ACTION_FY, SUFFIX_CODE, RESP_SPEC_FULL_NAME_CODE, RESP_SPEC_EMAIL_ADDRESS, PD_EMAIL_ADDRESS, PD_FULL_NAME, ADMIN_PHS_ORG_CODE, RESP_SPEC_NPN_ID, PROG_CLASS_CODE)  
SELECT DISTINCT GAQV.APPL_ID, GAQV.APPL_TYPE_CODE, GAQV.SERIAL_NUM, GAQV.SUPPORT_YEAR, GAQV.ACTION_FY, GAQV.SUFFIX_CODE, GAQV.RESP_SPEC_FULL_NAME_CODE, GAQV.RESP_SPEC_EMAIL_ADDRESS, GAQV.PD_EMAIL_ADDRESS, GAQV.PD_FULL_NAME, GAQV.ADMIN_PHS_ORG_CODE, GAQV.RESP_SPEC_NPN_ID, CASE WHEN LEN(RTRIM(LTRIM(GAQV.[PD_ROLE_USAGE_CODE])))>=2 AND LEN(RTRIM(LTRIM(GAQV.[CAY_CODE])))>=2 THEN GAQV.PD_ROLE_USAGE_CODE+GAQV.CAY_CODE ELSE '' END as PROG_CLASS_CODE
	from GM_ACTION_QUEUE_VW GAQV LEFT JOIN Grant_Contacts_PD_GS GC  
	ON GC.[SERIAL_NUM] = GAQV.[SERIAL_NUM] AND GC.ADMIN_PHS_ORG_CODE = GAQV.ADMIN_PHS_ORG_CODE and GC.APPL_ID = GAQV.APPL_ID
	where GC.APPL_ID is null 

Update Grant_Contacts_PD_GS set PD_FULL_NAME = null
where LTRIM(RTRIM(PD_FULL_NAME)) = ','

	--BRING ALL PD FROM PD_DETAILS_VW ACTIVE & INACTIVE, THEN ERASE EMAILS IF PD IS INACTIVE
	SELECT PROG_CLASS_CODE,PD_FULL_NAME,PD_EMAIL_ADDRESS,INACTIVE_DATE
	into #CIIP_PD_INFO
	from openquery(CIIP_PROD,'SELECT DISTINCT PCC AS PROG_CLASS_CODE, PD_NAME AS PD_FULL_NAME,EMAIL_ADDRESS AS PD_EMAIL_ADDRESS ,INACTIVE_DATE
	FROM PD_DETAILS_VW WHERE PD_CODE IS NOT NULL')

	--ERASE EMAILS IF PD IS INACTIVE
	UPDATE contact SET contact.PD_EMAIL_ADDRESS = NULL 
	FROM Grant_Contacts_PD_GS contact inner join #CIIP_PD_INFO ipd on contact.PD_EMAIL_ADDRESS = ipd.PD_EMAIL_ADDRESS COLLATE DATABASE_DEFAULT
	WHERE ipd.INACTIVE_DATE IS NOT NULL
	
print 'Updated PD Contacts From GP MATS ' + cast(@@ROWCOUNT as varchar)+' @ '+ cast(getdate() as varchar)

	--REMOVE EMAIL ADDRESS FOR THOSE WHO LEFT ORGANIZATION   --87662/87537
UPDATE Grant_Contacts_PD_GS SET RESP_SPEC_EMAIL_ADDRESS = NULL
WHERE RESP_SPEC_NPN_ID NOT IN 
(SELECT  epn_id FROM  openquery(CIIP_PROD,'select distinct epn_id  from NCI_PERSON_ORG_ROLES_T where ERE_CODE = ''GMSPEC'' AND END_DATE IS NULL') ) 


print 'Disabled email for moved out PD =' + cast(@@ROWCOUNT as varchar)


GO

