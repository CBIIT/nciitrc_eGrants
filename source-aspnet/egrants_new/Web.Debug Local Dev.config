<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
	
	<!-- Connection String Transformations -->
	<connectionStrings>
		<add name="EgrantsDB"
			 connectionString="Data Source=NCIDB-D387-V.nci.nih.gov\MSSQLEGRANTSQ,52000;Persist Security Info=True;Initial Catalog=EIM;User Id=egrantsuser;Password=Jo0ne62017!;Connect Timeout=45"
			 xdt:Transform="SetAttributes" xdt:Locator="Match(name)" />
		<!-- <add name="ASPStateSessionDB" -->
		<!--      connectionString="NCIDB-D387-V.nci.nih.gov\MSSQLEGRANTSQ,52000" -->
		<!--      xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/> -->
		<add name="DocmanDB"
			 connectionString="Data Source=NCIDB-D387-V.nci.nih.gov\MSSQLEGRANTSQ,52000;Persist Security Info=True;Initial Catalog=Docman;User ID=egrantsuser;Password=Jo0ne62017!;Connect Timeout=45"
			 xdt:Transform="SetAttributes" xdt:Locator="Match(name)" />
		<add name="webgrant"
			 connectionString="egrants-file-dev.nci.nih.gov"
			 xdt:Transform="SetAttributes" xdt:Locator="Match(name)" />
		<add name="ImageServer"
			 connectionString="https://egrants-web-dev.nci.nih.gov/"
			 xdt:Transform="SetAttributes" xdt:Locator="Match(name)" />
		<add name="certPath"
			 connectionString="C:\utils\cert\2023\EGRANTS-WEB-DEV_NCI_NIH_GOV.pfx"
			 xdt:Transform="SetAttributes" xdt:Locator="Match(name)" />
	</connectionStrings>

	<!-- appSettings Transformations -->
	<appSettings>
		<add key="WSClientCertPath" value="C:\utils\cert\2023\EGRANTS-WEB-DEV_NCI_NIH_GOV.pfx" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" />
	</appSettings>

	<!-- system.WebServer Transformations -->
	<system.webServer xdt:Transform="Replace">
			<directoryBrowse enabled="true" />
			<handlers>
				<remove name="ExtensionlessUrlHandler-Integrated-4.0" />
				<remove name="OPTIONSVerbHandler" />
				<remove name="TRACEVerbHandler" />
				<add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
			</handlers>
			<validation validateIntegratedModeConfiguration="false" />
			<security>
				<requestFiltering>
					<!-- maxAllowedContentLength, Specifies the maximum length of content in a request, in bytes. (2147483648 bytes are about 2GB)-->
					<requestLimits maxAllowedContentLength="2147483648" />
				</requestFiltering>
			</security>
			<modules>
				<remove name="TelemetryCorrelationHttpModule" />
				<add name="TelemetryCorrelationHttpModule" type="Microsoft.AspNet.TelemetryCorrelation.TelemetryCorrelationHttpModule, Microsoft.AspNet.TelemetryCorrelation" preCondition="managedHandler" />
				<remove name="ApplicationInsightsWebTracking" />
				<add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" />
			</modules>
	</system.webServer>

	<!-- system.web.webPages.zazor Transformations -->
	<system.web.webPages.razor>
		<pages pageBaseType="System.Web.Mvc.WebViewPage">
			<namespaces>
				<add namespace="egrants_new" xdt:Transform="Insert" />
			</namespaces>
		</pages>
	</system.web.webPages.razor>

	<!-- system.webServer Transformations -->
	<system.webServer xdt:Transform="Replace">
		<directoryBrowse enabled="true" />
		<handlers>
			<remove name="ExtensionlessUrlHandler-Integrated-4.0" />
			<remove name="OPTIONSVerbHandler" />
			<remove name="TRACEVerbHandler" />
			<add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
		</handlers>
		<validation validateIntegratedModeConfiguration="false" />
		<security>
			<requestFiltering>
				<!-- maxAllowedContentLength, Specifies the maximum length of content in a request, in bytes. (2147483648 bytes are about 2GB)-->
				<requestLimits maxAllowedContentLength="2147483648" />
			</requestFiltering>
		</security>
		<modules>
			<remove name="TelemetryCorrelationHttpModule" />
			<add name="TelemetryCorrelationHttpModule" type="Microsoft.AspNet.TelemetryCorrelation.TelemetryCorrelationHttpModule, Microsoft.AspNet.TelemetryCorrelation" preCondition="managedHandler" />
			<remove name="ApplicationInsightsWebTracking" />
			<add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" />
		</modules>
	</system.webServer>

	<!-- system.web Transformations -->
	<system.web xdt:Transform="Replace">
		<compilation debug="true" targetFramework="4.7.2" />
		<!-- maxRequestLength Specifies the limit for the input stream buffering threshold, in KB(2097152 ar about 2GB) 
        executionTimeout in seconds(3600==1h) -->

		<!-- Turn on Custom Errors -->
		<customErrors mode="On" defaultRedirect="DefaultRedirectErrorPage.aspx">
			<error statusCode="404" redirect="Http404ErrorPage.aspx" />
		</customErrors>
		<httpRuntime targetFramework="4.7.2" maxRequestLength="2097152" executionTimeout="3600" />
		<anonymousIdentification cookieRequireSSL="false" />
		<!-- No config attribute for SameSite -->
		<authentication>
			<forms cookieSameSite="Lax" requireSSL="false" />
		</authentication>
		<sessionState cookieSameSite="Lax" />
		<!-- No config attribute for Secure -->
		<roleManager cookieRequireSSL="false" />
		<httpModules>
			<add name="TelemetryCorrelationHttpModule" type="Microsoft.AspNet.TelemetryCorrelation.TelemetryCorrelationHttpModule, Microsoft.AspNet.TelemetryCorrelation" />
			<add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" />
		</httpModules>
		<profile defaultProvider="DefaultProfileProvider">
			<providers>
				<add name="DefaultProfileProvider" type="System.Web.Providers.DefaultProfileProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="EgrantsDB" applicationName="/" />
			</providers>
		</profile>
		<membership defaultProvider="DefaultMembershipProvider">
			<providers>
				<add name="DefaultMembershipProvider" type="System.Web.Providers.DefaultMembershipProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="EgrantsDB" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
			</providers>
		</membership>
		<roleManager defaultProvider="DefaultRoleProvider">
			<providers>
				<add name="DefaultRoleProvider" type="System.Web.Providers.DefaultRoleProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="EgrantsDB" applicationName="/" />
			</providers>
		</roleManager>
		<!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
			
			stateNetworkTimeout = Gets or sets the amount of time the network connection between the Web server and the state server can remain idle.
			sqlConnectionString = Gets or sets the state server connection string.
			sqlCommandTimeout = Gets or sets the duration time-out for the SQL commands using the SQL Server session state mode.
			customProvider = Gets or sets the name of the custom provider from the Providers collection.
			cookieless = Gets or sets a value indicating whether cookies are used to identify client sessions.
			cookieName = Gets or sets the cookie name.
			timeout = Gets or sets the session time-out.
			allowCustomSqlDatabase = Gets or sets a value indicating whether the user can specify the initial catalog value in the SqlConnectionString property.
			regenerateExpiredSessionId = Gets or sets a value indicating whether the session Id will be re-issued when an expired session ID is specified by the client.
			partitionResolverType = Gets or sets a value specifying where to store the session state.
			useHostingIdentity = Gets or sets a value specifying the whether the session state will use client impersonation when available, or will always revert to the hosting identity.
		-->
		<!-- <sessionState mode="InProc" -->
		<!--               stateConnectionString="tcpip=NCIDB-D387-V.nci.nih.gov\MSSQLEGRANTSQ,52000" -->
		<!--               stateNetworkTimeout="2" -->
		<!--               sqlConnectionString="ASPStateProvider" -->
		<!--               sqlCommandTimeout="30" -->
		<!--               customProvider="" -->
		<!--               cookieless="UseDeviceProfile" -->
		<!--               cookieName="ASP.NET_SessionId" -->
		<!--               timeout="20" -->
		<!--               allowCustomSqlDatabase="false" -->
		<!--               regenerateExpiredSessionId="false" -->
		<!--               partitionResolverType="" -->
		<!--               useHostingIdentity="true"> -->
		<!-- 	<providers> -->
		<!-- 		<clear /> -->
		<!-- 	</providers> -->
		<!-- </sessionState> -->
		<!-- <sessionState mode="InProc" customProvider="DefaultSessionProvider"> -->
		<!-- 	<providers> -->
		<!-- 		<add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="ASPStateSessionDB" /> -->
		<!-- 	</providers> -->
		<!-- </sessionState> -->
		<!--<sessionState mode="InProc" 
		              cookieless="UseDeviceProfile" 
		              cookieName="ASP.NET_SessionId" 
		              timeout="20" 
		              regenerateExpiredSessionId="false" 
		              useHostingIdentity="true" />-->
		<sessionState cookieSameSite="None">
		</sessionState>
		<pages>
			<controls>
				<add assembly="Microsoft.AspNet.Web.Optimization.WebForms" namespace="Microsoft.AspNet.Web.Optimization.WebForms" tagPrefix="webopt" />
			</controls>
		</pages>
	</system.web>
</configuration>