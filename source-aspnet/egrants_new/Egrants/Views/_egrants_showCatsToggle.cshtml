 @{
    @*<div id="toggle_cats" width="1000" style="border-bottom:groove; border-top:double; padding-bottom:5px;min-height:50px; width:900px; padding-left:20px; float:left; display:none;">*@
<div id="toggle_cats" style="border-bottom:groove; border-top:double; border-top-color:currentColor; width:900px; padding-left:30px; float:left; display:none; float:left;">
   <input type="checkbox" id="all_toggle_cats" onClick="JavaScript:select_all_toggle_cats()" />&#0160;<b>Select All</b>
   <div style="float: left; display: inline; width: 900px;">
      <div class="row">
         <div class="col-sm" id="cats_column_1" style="display: inline"></div>
         <div class="col-sm" id="cats_column_2" style="display: inline"></div>
         <div class="col-sm" id="cats_column_3" style="display: inline"></div>
      </div>
      <div style="display: inline; float: left; width: 900px; margin-left: 15px;">
         <a href="JavaScript:search_by_toggle()" title="Search for selected Grant Years and Categories">
            <img style="vertical-align: middle; width: 30px" src="~/Content/images/searchicon.png" />
         </a>
      </div>
   </div>
</div>
}

<script language="JavaScript" type="text/javascript">

   function before_show_toggle_cats() {
       if (ShowToggleAppls == 0 && document.getElementById("hidSelectedAppls").value == "" && document.getElementById("hidApplID").value == "") {
           alert("Please select grant year");
           return false;
       } else if (ShowToggleAppls == 1 && appls_list == "") {
           alert("Please select grant year to load categories");
           return false;
       } else show_toggle_cats();
       return true;
   }

   //create toggle for categories
   function show_toggle_cats() {
       //load toggle cats
       load_toggle_cats();

       //set toggle appls
       var promise1 = new Promise(function (resolve, reject) {
           setTimeout(function () {
               resolve(check_toggle_cats_checkbox());
           }, 800);
       });

       promise1.then(function (value) {
           console.log(value);
       });

       //show search icon
       document.getElementById("show_search_form").style.display = "inline";
       //show toggle appls icon and hide toggle_appls
       document.getElementById("show_appls_toggle").style.display = "inline";
       document.getElementById("toggle_appls").style.display = "none";
       //hide toggle cats icon and show toggle_cats
       if (ShowToggleDownload == 1) {
           document.getElementById("show_download_toggle").style.display = "none";
       }

       document.getElementById("show_cats_toggle").style.display = "none";
       document.getElementById("toggle_cats").style.display = "inline";
       document.getElementById("toggle_title").innerHTML = "Category";
   }

   //load toggle cats
   function load_toggle_cats() {
       var grant_id = document.getElementById("hidGrantID").value;
       var appl_id = document.getElementById("hidApplID").value;
       //var container = document.getElementById("toggle_cats");
       //var create_str = "<div style='float:left; display:inline; width:900px;'><span>&#0160;</span><input type='checkbox' id='all_toggle_cats' onClick='JavaScript:select_all_toggle_cats()'/><span>&#0160;&#0160;</span><b>Select All</b></div><div style='float:left; display:inline; width:900px;'>";
       var cats_column_1 = document.getElementById("cats_column_1");
       var cats_column_2 = document.getElementById("cats_column_2");
       var cats_column_3 = document.getElementById("cats_column_3");
       var cats_data_1 = "";
       var cats_data_2 = "";
       var cats_data_3 = "";

       if (appls_list != "") {
           yars = appls_list;
       } else yars = appl_id;

       $.ajax(
       {
           type: 'POST',
           url: "/Egrants/LoadCategories",
           data: { grant_id: grant_id, years: yars },  //fy: fy, mechan: mechan,
           success: function (resp) {
               //sessionStorage.year = resp;
               var jsonobj = JSON.parse(resp);

               //to check how many category in JSON
               var json_str = jsonobj.toString();
               var total_cats = json_str.split(',').length;
               if (total_cats < 3) { total_cats = 3 };
               var per_cats_column = Math.ceil(total_cats / 3);

               //load category list by vertical
               $.each(jsonobj, function (index, element) {
                   //alert("index=" + index);
                   var SplitPoint = element.indexOf(":");
                   var category_id = element.substring(0, SplitPoint);
                   var category_name = element.substring(SplitPoint + 1, element.length);
                   if (index < per_cats_column) {             
                       cats_data_1 = cats_data_1 + "<input type='checkbox' id=" + category_id + " name=" + category_id + " onchange='JavaScript: create_selected_cats_list();'/><span>&#0160;&#0160;</span>";
                       cats_data_1 = cats_data_1 + "<span style='vertical-align:central'>" + category_name + "</span><br/>";
                   }
                   if (index >= per_cats_column && index < (per_cats_column * 2)) {                   
                       cats_data_2 = cats_data_2 + "<input type='checkbox' id=" + category_id + " name=" + category_id + " onchange='JavaScript: create_selected_cats_list();'/><span>&#0160;&#0160;</span>";
                       cats_data_2 = cats_data_2 + "<span style='vertical-align:central'>" + category_name + "</span><br/>";
                   }
                   if (index >= (per_cats_column * 2) && index < total_cats) {              
                       cats_data_3 = cats_data_3 + "<input type='checkbox' id=" + category_id + " name=" + category_id + " onchange='JavaScript: create_selected_cats_list();'/><span>&#0160;&#0160;</span>";
                       cats_data_3 = cats_data_3 + "<span style='vertical-align:central'>" + category_name + "</span><br/>";
                   }
               });
           
               $(cats_data_1).appendTo(cats_column_1);
               $(cats_data_2).appendTo(cats_column_2);
               $(cats_data_3).appendTo(cats_column_3);
           }
       });
   }

   //check all checkbox by selecte catslist
   function check_toggle_cats_checkbox() {
       var checkboxes = $('div#toggle_cats input[type="checkbox"]');
       if (ShowToggleCats == 0 && document.getElementById("hidSelectedCats").value != "") {
           if (document.getElementById("hidSelectedCats").value == "All") {
               cats_list = "All";
               //select_all           
               document.getElementById("all_toggle_cats").checked = true;
               checkboxes.each(function(index) {
                  $(this).prop("checked", true);
               });
           }
           else {
               cats_list = document.getElementById("hidSelectedCats").value;
               var selectedcats = cats_list;
               var i = selectedcats.split(",").length - 1;
               //alert(i);
               if (i == 0) {
                   var categroy_id = selectedcats;
                   var el = categroy_id;
                   document.getElementById(el).checked = true;
               } else if (i > 0) {
                   while (i > 0) {
                       comma = selectedcats.lastIndexOf(",");
                       var categroy_id = selectedcats.substring(comma + 1, selectedcats.length);
                       var el = categroy_id;
                       if (document.getElementById(el) != null) {
                           document.getElementById(el).checked = true;
                       }
                       i = i - 1;
                       selectedcats = selectedcats.substring(0, comma);
                  }

                   //get last categroy_id;         
                   var categroy_id = selectedcats.substring(0, comma);
                   var el = categroy_id;
                   if (document.getElementById(el) != null) {
                       document.getElementById(el).checked = true;
                   }
               }
          }

           //check if all checkbox has been selected
           selecte_cats_all_checkbox();
      }

       //after user made change wby selection with ApplsToggle
       if (ShowToggleCats == 1) {
           if (cats_list == "All") {
               //select_all           
               document.getElementById("all_toggle_cats").checked = true;
               checkboxes.each(function (index) {
                   $(this).prop("checked", true);
               })
           } else {
               var selected_cats = cats_list;
               var i = selected_cats.split(",").length - 1;
               //alert(i);
               if (i == 0) {
                   var categroy_id = selected_cats;
                   var el = categroy_id;
                   document.getElementById(el).checked = true;
               }

               if (i > 0) {
                   while (i > 0) {
                       comma = selected_cats.lastIndexOf(",");
                       var categroy_id = selected_cats.substring(comma + 1, selected_cats.length);
                       var el = categroy_id;
                       if (document.getElementById(el) != null) {
                           document.getElementById(el).checked = true;
                       }
                       i = i - 1;
                       selected_cats = selected_cats.substring(0, comma);
                   }
                   //get last categroy_id;         
                   var categroy_id = selected_cats.substring(0, comma);
                   var el = categroy_id;
                   document.getElementById(el).checked = true;
               }
               //check if all checkbox has been selected
               selecte_cats_all_checkbox();
           }
       }
   }

   //create selected cats list by user selected checkbox
   function create_selected_cats_list() {
       //alert("create selected cats list");
       ShowToggleCats = 1;
       cats_list = "";
       var checkboxes = $('div#toggle_cats input[type="checkbox"]');

       for (var i = 0; i < checkboxes.length; i++) {
           if (checkboxes[i].checked == true && checkboxes[i].id != "all_toggle_cats") {
               cats_list = cats_list + checkboxes[i].id + ',';
           }
       }

       if (cats_list != "" && cats_list.indexOf(",") > 0) {
           cats_list = cats_list.substring(0, cats_list.length - 1);
      }

       //check if all checkbox has been checked
       selecte_cats_all_checkbox();
   }

   //check if all checkbox have been selected 
   function selecte_cats_all_checkbox() {

       var checkboxes = $('div#toggle_cats input[type="checkbox"]');
       var inputCount = checkboxes.length;
       CatsCheckBoxCount = checkboxes.length - 1;

       for (var i = 0; i < inputCount; i++) {
           if (checkboxes[i].checked == true && checkboxes[i].id != "all_toggle_cats") {
               CatsSelectedCount = CatsSelectedCount + 1;
           }
       }

       //alert("CatsSelectedCount=" + CatsSelectedCount + ",CatsCheckBoxCount=" + CatsCheckBoxCount);
       if (CatsSelectedCount == CatsCheckBoxCount) {
           document.getElementById("all_toggle_cats").checked = true;
           cats_list = "All";
       }
   }

   //check all check box for toggle_cats after user check select_all
   function select_all_toggle_cats() {
       ShowToggleCats = 1;
       //alert(document.getElementById("all_toggle_cats").checked);
       var checkboxes = $('div#toggle_cats input[type="checkbox"]');
       if (document.getElementById("all_toggle_cats").checked == false) {
           document.getElementById("all_toggle_cats").checked = false;
           checkboxes.each(function (index) {
               $(this).prop("checked", false);
           })
           //clean up cats_list
           cats_list = "";
       }
       else {
           document.getElementById("all_toggle_cats").checked = true;
           checkboxes.each(function (index) {
               $(this).prop("checked", true);
           })
           //create cats_list
           cats_list = "All";
       }
   }

</script>
